* get
ПАРАМЕТРЫ номер клиента
РЕЗУЛЬТАТ хеш параметров клиента или undef если клиент не найден
ПРИМЕР client::get(1)

* charges
РЕЗУЛЬТАТ массив
ПРИМЕР my $charges = client->charges(123);
ФОРМАТ ВЫХОДНЫХ ДАННЫХ:
массив хешей, значения хеша:
period_id=>
month=>отчётный месяц, чтобы не узнавать его по period_id
service_id=>
service=>название службы, чтобы не узнавать её по service_id
tariff_id=>
tariff=>название тарифа в этом месяце, чтобы не узнавать его по tariff_id
month_days=>дней в месяце
total_days=>сколько дней всего абонент был включён (может в месяце 30 дней, а включён был только 10)
act_log=>массив содержащий 0/1 на каждый включённый/выключенный день (используется только для системных штук)


###Параметры специйфичные для конкретного сервиса (он у нас пока только один)

tarffic=>{хэш}, ключ - класс трафика, значение - трафик в байтах, пример {0=>13123213,1=>12231213}, у нас 0 это интернет, 1 это локальный
traffic_summa=>сумма списанная за трафик
traffic_free=>сколько трафика выдано бесплатно
season_summa=>абонплата
##

summa=>собственно сумма наработки (traffic_summa+season_summa)


**********
* payments
РЕЗУЛЬТАТ массив
ПРИМЕР my $payments = client->payments(123);
ФОРМАТ ВЫХОДНЫХ ДАННЫХ:
массив хешей, значения хеша:
id=>номер платежа, уникальный
timestamp=>время появления этой записи в базе
invoice_id=>ID счёта, если выставлялся, сейчас всегда NULL
summa_order=>сумма платежа
summa=>реальная сумма зачисления (может отличаться от summa_order по причине налогов или скидки)
payment_method_id
payment_method=>{name=>'Название метода',tax=>'% ставка',comment,id}
type=> 0 - за подключение, 1- за трафик (рудимент, но пока используется)
date=>Дата платежа
manager_id=>ID менеджера (пока не используется)
confirm_datetime=>Дата подтверждения платежа (пока не используется)
comment=>Коментарий из платёжки
secret_comment=>Коментарий оператора, не отображается абонентам, может быть указана сумма отката и тп.


* list
РЕЗУЛЬТАТ массив
ПРИМЕР my $clients = Client::List({name=>'*никола*',is_firm=>1,   # Параметры поиска (необязательные)

                                   reg_date_from=>'2004-01-01',   # Промежуток дат регистрации
                                   reg_date_to=>'2004-01-10',     # или сама дата решистрации - reg_date

                                   charge_date=>'2004-01-01',            # Дата (влияет только месяц)
                                                                  # за которую выводить наработку
                                  },                                  'reg_date asc, name desc',      # Параметры сортировки
                                  3,                              # С какой записи выводить (начинаются с 0)
                                  10);                            # ограничение количества записей

ВОЗМОЖНЫЕ ПАРАМЕТРЫ ПОИСКА:
like - ищет вхождение указанной строки во все текстовые поля
reg_date_from, reg_date_to - одно из них может быть не указано, но с ними нельзя указывать reg_date
name, nick, firmname, inn, is_firm (0/1), telefon, email, reg_date (date), is_active (0/1), comment
is_balance_positive (0/1)
address_id, street_id, building_id, building, room, manager_id


* Create
ПАРАМЕТРЫ хэш параметров клиента
РЕЗУЛЬТАТ номер клиента
ПРИМЕР Client::Create({name=>'Вася',telefon=>'123'})

* Delete
ПАРАМЕТРЫ номер клиента
РЕЗУЛЬТАТ true или fault
ПРИМЕР Client::Delete(1)

* makePayment
ПАРАМЕТРЫ hashref
{client_id=>номер клиента,
 summa_order=>оплачиваемая сумма (можно оплатить 100, но зачислить как 120 в качестве бонуса, или наоборот уменшить на процент налога),
 summa=>непосредственно сумма зачисления (по умолчанию таже, что и summa_order,
 type=> (0 - за подключение, 1 - за трафик),
 form=> (Форма оплаты: 'cash' - наличные, 'order' - безнал ),
 date=> дата оплаты,
 comment=>'комментарий, указываются данные платёжки и тп',
 secret_comment=>'коментарий для своих - пользователю не отображается'
}
РЕЗУЛЬТАТ true или fault
ПРИМЕР Client::makePayment({client_id=>123,summa_order=>1000,summa=>1000,type=>1,
                            form=>'cash',date=>$DATE_FORMAT,comment=>'Оплачено через СБ'});

* hasPaymentsOfType
ПАРАМЕТРЫ номер клиента, тип
РЕЗУЛЬТАТ boolean
ОПИСАНИЕ оплатил ли клиент подключение
ПРИМЕР Client::hasPaymentsOfType(2,0)

* find
ПАРАМЕТРЫ имя клиента или фирма
РЕЗУЛЬТАТ false если ненайден, хеш если найден, и число если найдено более одого
ОПИСАНИЕ если клиент
ПРИМЕР client::find('вася')

* getBalance
ПАРАМЕТРА номер клиента, (0 если текущий баланс, 1 если высчитанный, дата - если баланс этой даты)
РЕЗУЛЬТАТ {summa=>,currency=>}
ПРИМЕР my $b = client::getBalance(12)


* GetPaymentsLog
ПАРАМЕТРЫ номер клиента
РЕЗУЛЬТАТ массив журнала платежей отсортированный по датам
ПРИМЕР my $plog = Client::GetPaymentLog(1)

* Modify
ПАРАМЕТРЫ номер клиента, хэш параметров для изменения
РЕЗУЛЬТАТ true или fault
ПРИМЕР Client::Modify(1,{telefon=>'456'})

* SetTariff
ПАРАМЕТРЫ номер клиента, номер тарифа (по тарифу определяется служба),
дата (сегодняшняя если не указывается)
РЕЗУЛЬТАТ true или fault
ПРИМЕР Client::SetTariff(3,2,$date)

* Activate
ПАРАМЕТРЫ номер клиента, номер службы, дата, на какое колличество
дней, комментарий
РЕЗУЛЬТАТ true или fault
ПРИМЕР Client::Activate(2,3,today(),3,'Включить на три дня')
ОПИСАНИЕ Если служба не указана включается по всем службам

* Deactivate
ПАРАМЕТРЫ номер клиента, номер службы, дата, комментарий
РЕЗУЛЬТАТ true или fault
ПРИМЕР Client::Activate(2,3,today(),'Нарушил договор')
ОПИСАНИЕ Если служба не указана отключается по всем службам

* GetActivationLog
ПАРАМЕТРЫ номер клиента, опционально номер службы
РЕЗУЛЬТАТ массив хэшей активаций отсортированный по датам
ПРИМЕР my $alog = Client::GetActivationLog(2,3)

* GetTariffLog
ПАРАМЕТРЫ номер клиента, опционально номер службы
РЕЗУЛЬТАТ массив хэшей установки тарифов отсортированный по датам
ПРИМЕР my $tlog = Client::GetTariffLog(2,3)

* GetAccount
ПАРАМЕТРЫ номер клиента
РЕЗУЛЬТАТ хэш (расширенный баланс, наработка за текущий период по сервисам и тп)
ПРИМЕР my $a = Client::GetAccount(2)



* GetChargeLog
ПАРАМЕТРЫ номер клинте, опционально номер службы
РЕЗУЛЬТАТ массив списаний по периодам
ПРИМЕР my $clog = Client::GetChargeLog(1)

* MakeInvoice
ПАРАМЕТРЫ номер клиента, параметры счёта
РЕЗУЛЬТАТ хэш с параметрами счёта
ПРИМЕР my $invoice = Client::MakeInvoice(1,{date=>today(),items=>[{price=>12.0,quantity=>1}]})
ОПИСАНИЕ Записывает в базу данный счёт

* GetInvoice
ПАРАМЕТРЫ номер клинета, номер счёта
РЕЗУЛЬТАТ хэш с параметрами счёта
ПРИМЕР my $invoice = Client::GetInvoice(1,131)

* GetInvoiceLog
ПАРАМЕТРА номер клиента
РЕЗУЛЬТАТ массив журнала выписки счетов отсортированный по датам
ПРИМЕР my $ilog = Client::GetInvoiceLog(1)

* SendMessage
ПАРАМЕТРЫ номер клиента, имя шаблона, данные
РЕЗУЛЬТАТ Посылается письмо по шаблону и данным, информация записывается журнал
ПРИМЕР Client::SendMessage(1,'no_money',{comment=>'Напоминаем в последний раз'});

* GetMessageLog
ПАРАМЕТРЫ номер клиента
РЕЗУЛЬТАТ массив журнала рассылки сообщений отсортированный по дате
ПРИМЕР my $mlog = Client::GetMessageLog(1)

* GetTariff
ПАРАМЕТРЫ номер клиента, номер службы, дата (сегдня, если не указана)
РЕЗУЛЬТАТ номер тарифа на указанную дату для указанной службы, undef
если не установлен

* GetStatus
ПАРАМЕТРЫ номер клиентаm номер службы (опционально)
РЕЗУЛЬТАТ хэш статуса, если служба указана, хэщ служб со статусами,
если не указана


****** Из других модулей

* AttachHost
ПАРАМЕТРЫ номер клиента, ip хоста, дата (сегодня если не указано)
РЕЗУЛЬТАТ true
ПРИМЕР Client::AttachHost(1,'10.100.2.10')

* DettachHost
ПАРАМЕТРЫ номер клиента, ip хоста, дата (сегодня если не указано)
РЕЗУЛЬТАТ true
ПРИМЕР Client::DeattachHost(1,'10.100.2.10')

* GetHostsList
ПАРАМЕТРЫ номер клиента
РЕЗУЛЬТАТ массив
ПРИМЕР Client::GetHostsList(1)

* GetByHost
ПАРАМЕТРЫ ip
РЕЗУЛЬТАТ номер клиента или undef
ПРИМЕР my $client = Host::GetClient('10.100.2.10')
